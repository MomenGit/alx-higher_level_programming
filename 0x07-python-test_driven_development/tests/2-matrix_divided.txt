The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Importing the function from the module:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]

Normal case correct matrix and a suitable divisor
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Normal case correct matrix and a suitable divisor
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Division by zero
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

Division by a non-number type
>>> matrix_divided(matrix, 'Hello')
Traceback (most recent call last):
  ...
TypeError: div must be a number

A matrix of different row sizes
>>> matrix = [[1, 2, 3], [4, 5]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

A matrix that contains a non-number item
>>> matrix = [[1, 2, 3], [4, 5, 'Hello']]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

A matrix that contains a non-list of numbers row
>>> matrix = [[1, 2, 3], 'Hello']
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats